Current Project State
  mutability => mutable-by-default [off-spec]
  types => impl: hardcoded, availability: standard-only, generics: no, inheritance: unk
    recognized => Int, Bool, ~Byte, ~Char
	...
  variables => unsupported
  functions => main-only
  annotations => ignored

Current Project Plan
  x86 Register Analysis/Instruction Issuance
	Assembly Emitter structure to handle instruction emitting in code
	  Allow for querying of which cpu flags are set/not (particularly for matching to register/value)
	  Improve the naming of arguments
  Basic Variables
    variable tracking structure (eventually move to analysis stages ???)
  Improving Assembly generation for operators
    Perform direct usage if possible (ie. "3 + 4" -> "mov 3, eax;add 4, eax;" not "mov 3, eax; push eax; mov 4, eax; add (esp), eax; add 4, esp;")
	  Also directly utilizes stack locations for adding/storing variables
  Basic Mutability Tracking
  Basic Types
    value/variable => type
  Type Inference
    explicit annotations within the ast
  Basic Function Definition
  Basic Function Calling
  Error/Exception handling and reporting
  Improve system benchmark collection
  Improve command line interface collection
  ...
  Converting Operators into function calls [ <- Needs mutability checking and references ]