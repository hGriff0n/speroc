
Update documentation to reflect recent changes

Fix Spero
  Need a better distinction between several semantic/syntactic constructs
    Inferred typing from analysis vs. syntactic typing
  Can you write "let _ = 3" ??? (current grammar impl says no)
  How is concurrency going to be handled?
  Figure out the rules and abilities of pointers and manual memory
  Work on recombining the pattern and binding syntaxes (for simplicity)
    'mut' placement prevents them from being the same grammar
    Look into whether ADT decomposition should be allowed in the binding grammar
  What about "accidental safe catching"?
    A function is accidentally left as "unsafe" by the programmer
    Later-on they specify a section of code as "safe" to catch one "unsafe"
      By accident this annotation also catches the accidental function
  Should a yield without an accompianing wait revert to a straight return
  How can types specify behavior for '()' operator

Fixes Waiting for Other Features
  In-place modification of containers using for loops/iterators
    Waiting for: Implementation of standard containers and iterators
  I feel the FnCall Node has a bit too much responsibility, especially for anon types
    Types and Variables (non-calls) and Anonymous Types may benefit from a subtype node
	  This somewhat depends on analysis and code generation in the future

Work on ast construction


Things I've Learned
  Alt-click is vs-codes way of ctrl-click in sublime